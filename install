#!/usr/bin/env bash
#
# Copyright (c) 2015 Joyent Inc., All rights reserved.
#
# Install Arch Linux into a directory, modify the installation, then tar it up.
#

set -euo pipefail
IFS=$'\n\t'

SCRIPT_DIR=$(realpath $(dirname $0))
GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

usage() {
cat <<EOF
Install and modify Arch Linux in a given directory in a given directory using a given mirror
Usage:
  $0 -d <INSTALL_DIR> -i <IMAGE_NAME> -p <NAME> -D <DESC> -u <DOCS>
Example:
  $0 -d /data/chroot -i lx-archlinux -p "Arch Linux LX Brand" -D "Arch Linux lx-brand image." -u https://docs.joyent.com/images/lx-brand-beta
OPTIONS:
  -d A path to the install directory
  -i The name of the image. This is used for naming the tarball.
  -p The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
  -D A description for the image. This is used in the image manifest and the /etc/product file.
  -u A URL to the image docs [optional]
  -m Create a smaller "minimal" image
  -h Show this message
EOF
}

INSTALL_DIR=
IMAGE_NAME=
NAME=
DESC=
DOCS=
MINIMAL=false

while getopts "hd:i:p:D:u:m" OPTION
do
  case $OPTION in
    h)
      usage
      exit
      ;;
    d)
      INSTALL_DIR=`realpath ${OPTARG%/}`
      ;;
    i)
      IMAGE_NAME=${OPTARG}
      ;;
    p)
      NAME=${OPTARG}
      ;;
    D)
      DESC=${OPTARG}
      ;;
    u)
      DOCS=${OPTARG}
      ;;
    m)
      MINIMAL=true
      ;;
    \?)
      usage
      exit
      ;;
  esac
done

if [[ $# -eq 0 ]]; then
  usage
  exit 1
fi

if [[ -z ${INSTALL_DIR} ]]; then
  echo "Error: missing install directory (-d) value"
  exit 1
fi

if [[ -z ${IMAGE_NAME} ]]; then
  echo "Error: missing image name (-i) value"
  exit 1
fi

if [[ -z ${NAME} ]]; then
  echo "Error: missing proper name (-p) value"
  exit 1
fi

if [[ -z ${DESC} ]]; then
  echo "Error: missing image description (-D) value"
  exit 1
fi

TARGET="${IMAGE_NAME}-${BUILD_DATE}.tar.gz"

if [[ -z ${DOCS} ]]; then
  DOCS="https://docs.joyent.com/images/lx-brand-beta"
fi

echo "==> Installing CentOS into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
  echo "====> Found previous chroot. Deleting and creating a new one."
  rm -rf $INSTALL_DIR
fi

echo "==> Creating chroot $INSTALL_DIR..."
mkdir -p $INSTALL_DIR
mkdir -m 0755 -p $INSTALL_DIR/var/{cache/pacman/pkg,lib/pacman,log} $INSTALL_DIR/{dev,run,etc}
mkdir -m 1777 -p $INSTALL_DIR/tmp
mkdir -m 0555 -p $INSTALL_DIR/{proc,sys}

if [[ $MINIMAL ]] ; then
  echo "==> Installing needed core packages..."
  pacman -r $INSTALL_DIR -Sy --noconfirm archlinux-keyring ca-certificates ca-certificates-cacert ca-certificates-mozilla ca-certificates-utils curl gnupg groff pacman-mirrorlist systemd tzdata xz zlib bash bzip2 coreutils dhcpcd diffutils file filesystem findutils gawk gcc-libs gettext glibc grep gzip iproute2 iputils less licenses logrotate man-db nano pacman perl psmisc sed shadow sysfsutils systemd-sysvcompat tar texinfo util-linux vi which
else
  echo "==> Installing @base packages..."
  pacman -r $INSTALL_DIR -Sy --noconfirm base
fi

echo "==> Installing additional packages..."
pacman -r $INSTALL_DIR -Sy --noconfirm sudo vim wget openssh

echo "==> Setting TZ to UTC"
if [[ -f $INSTALL_DIR/etc/localtime ]]; then
  rm $INSTALL_DIR/etc/localtime
fi

cp $INSTALL_DIR/usr/share/zoneinfo/UTC $INSTALL_DIR/etc/localtime

echo "==> Disabling PasswordAuthentication"
sed s/PasswordAuthentication\ yes/PasswordAuthentication\ no/ -i $INSTALL_DIR/etc/ssh/sshd_config

echo "==> Setting UsePrivilegeSeparation"
# The sandbox value causes an issue with lx-brand. Change to "yes"
sed s/UsePrivilegeSeparation\ sandbox/UsePrivilegeSeparation\ yes/ -i $INSTALL_DIR/etc/ssh/sshd_config

echo "==> Creating /etc/motd"
cat << MOTD > $INSTALL_DIR/etc/motd
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > $INSTALL_DIR/etc/product
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Initiallizing and fetching submodule $GUESTTOOLS"
git submodule init
git submodule update
echo "====> Running ./install.sh -i $INSTALL_DIR"
( cd $GUESTTOOLS
  ./install.sh -i $INSTALL_DIR
)

echo "==> Saving installation as $TARGET. This may take a few minutes."
( cd $INSTALL_DIR && tar czf $SCRIPT_DIR/$TARGET --exclude-from=${SCRIPT_DIR}/exclude.txt * )

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
